<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<!--
This file defines a set of Event Tracing for Windows (ETW) providers that
are used to emit custom events into a trace being recorded by xperf/wpr or
logman. The intent of the custom providers is to add some context to the
raw kernel counter data in order to help with interpretation.

This file is processed using the following command line:
  mc.exe -um %(Filename)%(Extension) -z %(Filename)Generated
The outputs of this process are:
  %(Filename)Generated.h and %(Filename)Generated.rc

The mc.exe executable is referred to as the message compiler, and this process
is implemented as a custom build step that executes before the source code is
compiled. The mc.exe file can be found at:
  C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\mc.exe

One thing to be aware of is that in VS2010, the custom build step will not run
if you don't have any source files in the project. VS2013 does not have this
problem.

The generated header file should be included by one or more source files,
and the resource file should either be added to the project being instrumented
or merged in with an existing resource file. In this case, since we build the
custom ETW provider as a .DLL file, ETWProvider.dll, we just include the
generated files in the ETWProvider project.

The header file contains macros and functions to emit events. For more
information on the format of the instrumentation manifest (this file), see the
MSDN article 'Writing an Instrumentation Manifest', currently available at:
  http://msdn.microsoft.com/en-us/library/windows/desktop/dd996930%28v=vs.85%29.aspx

The above-referenced article mentions a GUI tool, ECManGen.exe, which is part
of the Windows SDK (in the Bin directory) and allows you to generate the
manifest without ever having to edit the XML manually. The specific path is:
  C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\ECMangen.exe

To make this easier to get to, add it to your Tools menu. To do this,
go Tools->External Tools..., click 'Add...' and specify ECManGen as the Title,
C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\ECMangen.exe as the
Command, and $(ProjectDir) as the Initial Directory.

If you do want to edit this file manually, and are using Visual Studio as your
XML editor, then you can get some IntelliSense help by using the EventManifest
schema. To do this, go XML->Schemas..., click 'Add...' and then select file:
  C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Include\eventman.xsd

I cannot find this schema file in later (v8.0, v8.1, v8.1A) SDK directories.

Before recording traces you need to execute the following commands:

  xcopy /y yourexe.exe %TEMP%
  wevutil um ETWProvider.man
  wevutil im ETWProvider.man

This unregisters, and then re-registers the custom ETW providers with the ETW
system. This process should be implemented as a custom build step that executes
after your executable is compiled and linked. To generate a trace on a non-dev
system, execute these steps manually by editing and running the provided batch
file script, etwregister.cmd.
-->
<instrumentationManifest xsi:schemaLocation="http://schemas.microsoft.com/win/2004/08/events eventman.xsd" xmlns="http://schemas.microsoft.com/win/2004/08/events" xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:trace="http://schemas.microsoft.com/win/2004/08/events/trace">
    <instrumentation>
        <events>
            <provider name="ETW.MAIN_THREAD" guid="{042CD377-8F6E-4BF0-93DE-B4BA32234771}" symbol="ETW_MAIN_THREAD" resourceFileName="%TEMP%\ETWProvider.dll" messageFileName="%TEMP%\ETWProvider.dll">
                <events>
                    <event symbol="MainEnterScope_Event" value="100" task="MainBlock" opcode="EnterScope" template="T_EnterScope" />
                    <event symbol="MainLeaveScope_Event" value="101" task="MainBlock" opcode="LeaveScope" template="T_LeaveScope" />
                    <event symbol="ThreadID_Event" value="102" task="ThreadID" opcode="Informational" template="T_ThreadID" />
                    <event symbol="MainMarker_Event" value="103" task="MainBlock" opcode="Marker" template="T_Marker" />
                </events>
                <tasks>
                    <task name="MainBlock" symbol="Block_Task" value="1" eventGUID="{BC29286F-D495-4E32-963B-91A9AA75B964}" />
                    <task name="ThreadID" symbol="ThreadID_Task" value="2" eventGUID="{1B140FCF-00AF-4AE5-B44E-14850B7BF657}" />
                </tasks>
                <opcodes>
                    <opcode name="EnterScope" symbol="EnterScope_Opcode" value="10" />
                    <opcode name="LeaveScope" symbol="LeaveScope_Opcode" value="11" />
                    <opcode name="Marker" symbol="Marker_Opcode" value="12" />
                    <opcode name="Informational" symbol="Informational_Opcode" value="14" />
                </opcodes>
                <keywords>
                    <keyword name="LowFrequency" symbol="LowFrequency_Keyword" mask="0x1" />
                    <keyword name="NormalFrequency" symbol="NormalFrequency_Keyword" mask="0x2" />
                    <keyword name="HighFrequency" symbol="HighFrequency_Keyword" mask="0x4" />
                </keywords>
                <templates>
                    <template tid="T_EnterScope">
                        <data name="Description" inType="win:AnsiString" outType="xs:string" />
                        <data name="Depth" inType="win:UInt32" outType="xs:unsignedInt" />
                    </template>
                    <template tid="T_LeaveScope">
                        <data name="Description" inType="win:AnsiString" outType="xs:string" />
                        <data name="Duration (ms)" inType="win:Float" outType="xs:float" />
                        <data name="Depth" inType="win:UInt32" outType="xs:unsignedInt" />
                    </template>
                    <template tid="T_ThreadID">
                        <data name="ThreadName" inType="win:AnsiString" outType="xs:string" />
                        <data name="ThreadID" inType="win:UInt32" outType="xs:unsignedInt" />
                    </template>
                    <template tid="T_Marker">
                        <data name="Text" inType="win:AnsiString" outType="xs:string" />
                    </template>
                </templates>
            </provider>
            <provider name="ETW.TASK_THREAD" guid="{08F6A7B2-48E7-4AD4-9A22-50806374B084}" symbol="ETW_TASK_THREAD" resourceFileName="%TEMP%\ETWProvider.dll" messageFileName="%TEMP%\ETWProvider.dll">
                <events>
                    <event symbol="TaskEnterScope_Event" value="100" task="TaskBlock" opcode="EnterScope" template="T_EnterScope" />
                    <event symbol="TaskLeaveScope_Event" value="101" task="TaskBlock" opcode="LeaveScope" template="T_LeaveScope" />
                    <event symbol="TaskMarker_Event" value="103" task="TaskBlock" opcode="Marker" template="T_Marker" />
                </events>
                <tasks>
                    <task name="TaskBlock" symbol="Block_Task" value="1" eventGUID="{CAF648BB-E84E-420C-9C34-8EBC67044729}" />
                </tasks>
                <opcodes>
                    <opcode name="EnterScope" symbol="EnterScope_Opcode" value="10" />
                    <opcode name="LeaveScope" symbol="LeaveScope_Opcode" value="11" />
                    <opcode name="Marker" symbol="Marker_Opcode" value="12" />
                    <opcode name="Informational" symbol="Informational_Opcode" value="14" />
                </opcodes>
                <keywords>
                    <keyword name="LowFrequency" symbol="LowFrequency_Keyword" mask="0x1" />
                    <keyword name="NormalFrequency" symbol="NormalFrequency_Keyword" mask="0x2" />
                    <keyword name="HighFrequency" symbol="HighFrequency_Keyword" mask="0x4" />
                </keywords>
                <templates>
                    <template tid="T_EnterScope">
                        <data name="Description" inType="win:AnsiString" outType="xs:string" />
                        <data name="Depth" inType="win:UInt32" outType="xs:unsignedInt" />
                    </template>
                    <template tid="T_LeaveScope">
                        <data name="Description" inType="win:AnsiString" outType="xs:string" />
                        <data name="Duration (ms)" inType="win:Float" outType="xs:float" />
                        <data name="Depth" inType="win:UInt32" outType="xs:unsignedInt" />
                    </template>
                    <template tid="T_Marker">
                        <data name="Text" inType="win:AnsiString" outType="xs:string" />
                    </template>
                </templates>
            </provider>
            <provider name="ETW.USER_INPUT" guid="{70E2503B-C6F3-4780-B323-BD8ED0C61BF8}" symbol="ETW_USER_INPUT" resourceFileName="%TEMP%\ETWProvider.dll" messageFileName="%TEMP%\ETWProvider.dll">
                <templates>
                    <template tid="T_MouseClick">
                        <data inType="win:Int32" name="Button Type" />
                        <data inType="win:UInt32" name="Flags" />
                        <data inType="win:Int32" name="x" />
                        <data inType="win:Int32" name="y" />
                    </template>
                    <template tid="T_MouseMove">
                        <data inType="win:UInt32" name="Flags" />
                        <data inType="win:Int32" name="x" />
                        <data inType="win:Int32" name="y" />
                    </template>
                    <template tid="T_MouseWheel">
                        <data inType="win:UInt32" name="Flags" />
                        <data inType="win:Int32" name="zDelta" />
                        <data inType="win:Int32" name="x" />
                        <data inType="win:Int32" name="y" />
                    </template>
                    <template tid="T_KeyPress">
                        <data inType="win:UInt32" name="Virtual key code" />
                        <data inType="win:AnsiString" name="Key name" />
                        <data inType="win:UInt32" name="Repeat count" />
                        <data inType="win:UInt32" name="Flags" />
                    </template>
                </templates>
                <keywords>
                    <keyword name="LowFrequency" symbol="LowFrequency_Keyword" mask="0x1" />
                    <keyword name="NormalFrequency" symbol="NormalFrequency_Keyword" mask="0x2" />
                    <keyword name="HighFrequency" symbol="HighFrequency_Keyword" mask="0x4" />
                </keywords>
                <opcodes>
                    <opcode name="MouseDown" symbol="MouseDown_Opcode" value="10" />
                    <opcode name="MouseUp" symbol="MouseUp_Opcode" value="11" />
                    <opcode name="MouseMove" symbol="MouseMove_Opcode" value="12" />
                    <opcode name="MouseWheel" symbol="MouseWheel_Opcode" value="13" />
                    <opcode name="KeyDown" symbol="KeyDown_Opcode" value="14" />
                </opcodes>
                <tasks>
                    <task name="Mouse" symbol="Mouse_Task" value="1" eventGUID="{EA7F2B9D-97AF-43D9-BB9F-D798F30BA921}" />
                    <task name="Keyboard" symbol="Keyboard_Task" value="2" eventGUID="{7A8A0FB9-C191-4182-8A73-04F77FCF3F95}" />
                </tasks>
                <events>
                    <event symbol="Mouse_down" template="T_MouseClick" value="400" task="Mouse" opcode="MouseDown" keywords="NormalFrequency" />
                    <event symbol="Mouse_up" template="T_MouseClick" value="401" task="Mouse" opcode="MouseUp"  keywords="NormalFrequency" />
                    <event symbol="Mouse_move" template="T_MouseMove" value="402" task="Mouse" opcode="MouseMove" keywords="HighFrequency" />
                    <event symbol="Mouse_wheel" template="T_MouseWheel" value="403" task="Mouse" opcode="MouseWheel"  keywords="NormalFrequency" />
                    <event symbol="Key_down" template="T_KeyPress" value="404" task="Keyboard" opcode="KeyDown"  keywords="NormalFrequency" />
                </events>
          </provider>
        </events>
    </instrumentation>
    <localization>
        <resources culture="en-US">
            <stringTable>
                <!-- <string id="A.map.foo.0.message" value="your text" /> -->
            </stringTable>
        </resources>
    </localization>
</instrumentationManifest>
